# Adapted from https://github.com/actions/starter-workflows/blob/51e3d515e95876eed0c47cd971e48fcf16c6705a/pages/nextjs.yml
# and https://github.com/actions/starter-workflows/blob/51e3d515e95876eed0c47cd971e48fcf16c6705a/pages/static.yml

name: Build and deploy Node.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::install"
            echo "::set-output name=runner::yarn"
            exit 0
          elif [ -f "${{ github.workspace }}/package-lock.json" ]; then
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::ci"
            echo "::set-output name=runner::npx --no-install"
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - run: ${{ steps.detect-package-manager.outputs.manager }} run build:pianoto-web --if-present
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
          VITE_PIA_INPAINTING_API_ADDRESS: 'https://pia.api.cslmusic.team/'
          VITE_DEPLOYMENT_URL: 'https://anonymousPIANOTO.github.io/pianoto_ismir_lbd_2022/'
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./packages/renderer/dist-pianoto

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
